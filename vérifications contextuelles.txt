- Une variable utilisee doit avoir ete initialisee dans la meme portee
- Les parametres d'une classe et de son constructeur sont les memes
- Le nom du constructeur est le meme que le nom de sa classe
- Toutes les variables membres doivent etre initialisees
- Lors de la creation d'un objet verification que son type existe/est connu
- Lors de l'heritage verifier que la super classe existe

- Lors de l'appel d'une methode ve rifier que la classe ou  super classe  de l'objet peut effectivement appeler cette methode
- Si on essaye de cast, il faut que le type existe/soit connu et que la partie castee soit compatible
- Verifier l'unicite des Objet
- La surcharge d'une methode est autorisee entre classes non liees par heritage
- Les methodes peuvent s'appeler elles-memes
- La surcharge de methode  n'est pas autorisee dans une classe ou entre classe et  super-classe
- La re definition doit etre precede de @Override
- Heritage sans circuit
- Lors d'operation, il faut que les types des variables soient compatibles pour l'operation
- Le type de la variable retournee est le meme que le type de retour de la methode ou que ce type soit compatible
